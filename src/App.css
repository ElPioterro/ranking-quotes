#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

/* --- Style dla Nagłówka i Nawigacji --- */
header {
  background-color: #282c34;
  padding: 20px;
  color: white;
  text-align: center;
}
nav {
  margin-top: 15px;
  display: flex;
  gap: 20px;
  justify-content: center;
}
nav a {
  color: #61dafb;
  text-decoration: none;
  font-size: 1.2rem;
  padding: 5px 10px;
  border-radius: 5px;
  transition: background-color 0.2s;
}
nav a:hover {
  background-color: #4a505c;
}

/* --- Style dla strony turnieju --- */
.tournament-container {
  text-align: center;
  width: 100%;
}

.comparison-area {
  display: flex; /* KLUCZOWE: Ustawia elementy obok siebie */
  justify-content: center;
  align-items: center; /* Wyrównuje w pionie */
  gap: 2rem;
  margin-top: 2rem;
  width: 100%;
}

.vs-separator {
  font-size: 3rem;
  font-weight: bold;
  color: #555;
}

.undo-area {
  margin-top: 2rem;
}

/* --- Style dla nowego ImageCard --- */
.image-card-container {
  flex: 1; /* KLUCZOWE: Każdy kontener zajmuje tyle samo dostępnej przestrzeni */
  min-width: 0; /* Ważne dla poprawnego działania flexboxa */
  display: flex;
  justify-content: center;
  align-items: center;
  height: 70vh; /* Ograniczamy wysokość kontenera do 70% wysokości ekranu */
  border: 2px dashed #ccc;
  border-radius: 10px;
  padding: 10px;
  cursor: pointer;
  transition: border-color 0.2s;
}

.image-card-container:hover {
  border-color: #61dafb;
}

.image-card-content {
  max-width: 100%; /* Obrazek nie będzie szerszy niż jego kontener */
  max-height: 100%; /* Obrazek nie będzie wyższy niż jego kontener */
  object-fit: contain; /* Gwarantuje, że cały obrazek jest widoczny i ma dobre proporcje */
}

.ranking-container {
  width: 90%;
  max-width: 960px; /* Ogranicz szerokość na dużych ekranach */
  margin: 2rem auto; /* Wycentruj kontener */
  text-align: center;
}

.ranking-list {
  display: grid;
  /* Definiujemy siatkę z 3 kolumnami.
     1. kolumna ma 100px szerokości.
     2. zajmuje resztę dostępnego miejsca (1fr).
     3. ma 100px szerokości.
  */
  grid-template-columns: 100px 1fr 100px;
  gap: 15px; /* Odstęp między wierszami */
  margin-top: 1.5rem;
}

/* --- Style dla nagłówka siatki --- */
.ranking-header {
  /* To sprawia, że nagłówek "przykleja się" do góry ekranu podczas przewijania */
  position: sticky;
  top: 0;
  background-color: #282c34; /* Kolor tła nagłówka strony */
  z-index: 10; /* Gwarantuje, że nagłówek jest zawsze na wierzchu */

  /* Poniższe 3 linie są wspólne dla nagłówka i wierszy danych */
  display: grid;
  grid-template-columns: subgrid; /* Dziedziczy definicje kolumn z .ranking-list */
  grid-column: 1 / -1; /* Rozciąga się na wszystkie 3 kolumny */
}

.ranking-header > div {
  padding: 15px;
  font-weight: bold;
  color: #61dafb; /* Kolor akcentu z Vite */
  text-align: center;
}

/* --- Style dla pojedynczego wiersza z danymi --- */
.ranking-row {
  /* Podobnie jak nagłówek, wiersz też jest elementem siatki */
  display: grid;
  grid-template-columns: subgrid;
  grid-column: 1 / -1;

  background-color: #3a3f4b;
  border-radius: 8px;
  transition: transform 0.2s ease-in-out, background-color 0.2s;
}

.ranking-row:hover {
  transform: scale(1.02);
  background-color: #4a505c;
}

/* --- Style dla poszczególnych komórek w wierszu --- */
.ranking-cell-place,
.ranking-cell-elo {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  font-weight: bold;
}

.ranking-cell-image {
  padding: 10px;
}

.ranking-cell-image img {
  width: 100%; /* Obrazek dopasowuje się do szerokości swojej komórki */
  height: auto;
  display: block; /* Usuwa mały, niechciany margines pod obrazkiem */
  border-radius: 4px;
}

/* Dodaj na końcu pliku src/App.css */

/* --- Style dla animacji w turnieju --- */

/* 1. Kontener na obrazek - dodajemy transition do płynnych zmian */
.image-card-container {
  /* ... (twoje obecne style dla .image-card-container) ... */
  transition: transform 0.4s ease-out, box-shadow 0.3s ease-in-out;
}

/* 2. Stan wejścia (skalowanie) */
/* Stan początkowy - niewidoczny i mały */
.image-card-container.entering {
  transform: scale(0.5);
  opacity: 0;
}
/* Stan końcowy - widoczny i w normalnym rozmiarze */
.image-card-container.visible {
  transform: scale(1);
  opacity: 1;
}

/* 3. Stany po wyborze (poświaty) */
.image-card-container.winner {
  box-shadow: 0 0 35px 10px rgba(74, 222, 128, 0.7); /* Zielona poświata */
  transform: scale(1.05); /* Lekkie powiększenie wygranego */
}

.image-card-container.loser {
  box-shadow: 0 0 35px 10px rgba(239, 68, 68, 0.7); /* Czerwona poświata */
}

/* 4. Animacje "rzucania" dla przegranego */
.image-card-container.throw-left {
  animation: throw-left-animation 0.5s ease-in forwards;
}

.image-card-container.throw-right {
  animation: throw-right-animation 0.5s ease-in forwards;
}

/* 5. Definicje klatek kluczowych (keyframes) */
@keyframes throw-left-animation {
  from {
    transform: rotate(0deg) translateX(0);
    opacity: 1;
  }
  to {
    transform: rotate(-35deg) translateX(-150%);
    opacity: 0;
  }
}

@keyframes throw-right-animation {
  from {
    transform: rotate(0deg) translateX(0);
    opacity: 1;
  }
  to {
    transform: rotate(35deg) translateX(150%);
    opacity: 0;
  }
}
